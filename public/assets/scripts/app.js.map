{"version":3,"sources":["App.js","Emitter.js","actioners/AppActioner.js","dispatchers/Dispatcher.js","stores/AppStore.js"],"names":["App","target","this","Emitter","eventListeners","AppActioner","type","Dispatcher","listeners","promises","AppStore","call","handlers","AppConstants","BOOTED","onBooted","AppDispatcher","register","handle","bind","prototype","boot","setTimeout","booted","render","element","React","createElement","AppComponent","document","body","rendered","window","app","on","event","listener","scope","undefined","push","callback","off","forEach","current","id","splice","length","emit","args","Array","slice","arguments","apply","RENDERED","dispatch","action","types","$__0","$__1","payload","resolves","rejects","filter","indexOf","map","$Dispatcher_","i","Promise","resolve","reject","then","Error","Emitter____Key","hasOwnProperty","____SuperProtoOfEmitter","Object","create","constructor","__superConstructor__","handler","console","log"],"mappings":"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","file":"app.js","sourcesContent":["class App {\n\n  /**\n   * Constructs the app.\n   *\n   * @return {void}\n   */\n  constructor(target) {\n    this.target = target;\n  }\n\n  /**\n   * Boots the app.\n   *\n   * @return {void}\n   */\n  boot() {\n    // Boot the app.\n\n    setTimeout(() => AppActioner.booted(), 1000);\n  }\n\n  /**\n   * Renders the app.\n   *\n   * @return {void}\n   */\n  render() {\n    this.element = React.createElement(AppComponent);\n\n    React.render(this.element, this.target || document.body);\n    AppActioner.rendered();\n  }\n\n}\n\nwindow.app = new App();\n","class Emitter {\n\n  /**\n   * Constructs the Emitter.\n   *\n   * @return {void}\n   */\n  constructor() {\n    this.eventListeners = {};\n  }\n\n  /**\n   * Attaches an event listener.\n   *\n   * @param {String}\n   * @param {Function}\n   * @param {Object}\n   * @return {void}\n   */\n  on(event, listener, scope) {\n    if (this.eventListeners[event] === undefined) {\n      this.eventListeners[event] = [];\n    }\n\n    this.eventListeners[event].push({\n      callback: listener,\n      scope\n    });\n  }\n\n  /**\n   * Removes an event listener.\n   *\n   * @param {String}\n   * @param {Function}\n   * @return {void}\n   */\n  off(event, listener) {\n    if (this.eventListeners[event] === undefined) {\n      return;\n    }\n\n    this.eventListeners[event].forEach((current, id) => {\n      if (listener !== current.callback) {\n        return;\n      }\n\n      this.eventListeners[event].splice(id, 1);\n    });\n\n    if (this.eventListeners[event].length === 0) {\n      delete this.eventListeners[event];\n    }\n  }\n\n  /**\n   * Emits an event.\n   *\n   * @param {String}\n   * @param {Object}\n   * @return {void}\n   */\n  emit(event, payload) {\n    if (this.eventListeners[event] === undefined) {\n      return;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.eventListeners[event].forEach((listener) => {\n      listener.callback.apply(listener.scope, args);\n    });\n  }\n\n}\n","var AppConstants = {\n  RENDERED: 'RENDERED',\n  BOOTED: 'BOOTED'\n};\n\nclass AppActioner {\n\n  /**\n   * Constructs the AppActioner.\n   *\n   * @param {String}\n   * @return {void}\n   */\n  constructor(type) {\n    this.type = type || 'App';\n  }\n\n  /**\n   * The app has been rendered.\n   *\n   * @return {void}\n   */\n  rendered() {\n    AppDispatcher.dispatch({\n      action: AppConstants.RENDERED\n    }, this.type);\n  }\n\n  /**\n   * The app has been booted.\n   *\n   * @return {void}\n   */\n  booted() {\n    AppDispatcher.dispatch({\n      action: AppConstants.BOOTED\n    }, this.type);\n  }\n\n}\n\nvar AppActioner = new AppActioner('App');\n","class Dispatcher {\n\n  /**\n   * Constructs the Dispatcher.\n   *\n   * @param {Array}\n   * @param {Array}\n   * @return {void}\n   */\n  constructor(listeners, promises) {\n    this.listeners = listeners || [];\n    this.promises = promises || [];\n  }\n\n  /**\n   * Registers a callback.\n   *\n   * @param {Function}\n   * @param {...String}\n   * @return {void}\n   */\n  register(callback, ...types) {\n    this.listeners.push({\n      callback,\n      types\n    });\n\n    return this.listeners.length - 1;\n  }\n\n  /**\n   * Dispatch a payload.\n   *\n   * @param {Object}\n   * @param {String}\n   * @return {void}\n   */\n  dispatch(payload, type) {\n    // First create array of promises for listeners to reference.\n    var resolves = [];\n    var rejects = [];\n    var listeners = this.listeners.filter((listener) => listener.types.indexOf(type) !== -1);\n\n    var promises = listeners.map(function (_, i) {\n      return new Promise(function (resolve, reject) {\n        resolves[i] = resolve;\n        rejects[i] = reject;\n      });\n    });\n\n    // Dispatch to listeners and resolve/reject promises.\n    listeners.forEach(function (listener, i) {\n      // Callback can return an obj, to resolve, or a promise, to chain.\n      // See waitFor() for why this might be useful.\n      Promise.resolve(listener.callback(payload, type)).then(function () {\n        resolves[i](payload, type);\n      }, function() {\n        rejects[i](new Error('Dispatcher callback unsuccessful'));\n      });\n    });\n  }\n\n}\n\nvar AppDispatcher = new Dispatcher();\n","class AppStore extends Emitter {\n\n  /**\n   * Constructs the AppStore.\n   *\n   * @return {void}\n   */\n  constructor() {\n    super();\n    \n    this.handlers = {};\n    this.handlers[AppConstants.BOOTED] = this.onBooted;\n\n    AppDispatcher.register(this.handle.bind(this), 'App');\n  }\n\n  /**\n   * Handles a payload.\n   *\n   * @param {Object}\n   * @return {void}\n   */\n  handle(payload) {\n    var handler = this.handlers[payload.action];\n\n    if (handler !== undefined) {\n      handler(payload);\n    }\n\n    this.emit(payload.action, payload);\n  }\n\n  /**\n   * Fired on the AppConstants.BOOTED event.\n   *\n   * @return {void}\n   */\n  onBooted() {\n    console.log('App booted.');\n  }\n\n}\n\nvar AppStore = new AppStore();\n"],"sourceRoot":"/source/"}